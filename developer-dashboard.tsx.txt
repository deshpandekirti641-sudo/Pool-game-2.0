'use client';

import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Separator } from '@/components/ui/separator';
import { IndianRupee, TrendingUp, Users, Gamepad2, DollarSign, Clock, Award, AlertCircle } from 'lucide-react';

export default function DeveloperDashboard(): JSX.Element {
  const [stats] = useState({
    totalEarnings: 45000000, // In paise (₹4,50,000)
    todayEarnings: 1250000, // In paise (₹12,500)
    totalMatches: 2847,
    activeUsers: 324,
    totalUsers: 1523,
    avgMatchDuration: 58,
    serverFeeRate: 20, // 20%
    topPlayers: [
      { username: 'PoolKing99', matches: 187, winRate: 68, earnings: 275000 },
      { username: 'SharpShooter', matches: 154, winRate: 72, earnings: 298000 },
      { username: 'BallMaster', matches: 142, winRate: 65, earnings: 215000 },
    ],
    recentTransactions: [
      { id: 'txn_1', type: 'Server Fee', amount: 40000, timestamp: new Date(Date.now() - 300000) },
      { id: 'txn_2', type: 'Server Fee', amount: 40000, timestamp: new Date(Date.now() - 600000) },
      { id: 'txn_3', type: 'Server Fee', amount: 40000, timestamp: new Date(Date.now() - 900000) },
      { id: 'txn_4', type: 'Server Fee', amount: 80000, timestamp: new Date(Date.now() - 1200000) },
      { id: 'txn_5', type: 'Server Fee', amount: 40000, timestamp: new Date(Date.now() - 1500000) },
    ],
  });

  return (
    <div className="space-y-4">
      {/* Access Warning */}
      <Card className="bg-purple-50 border-purple-200">
        <CardContent className="p-4">
          <div className="flex items-start gap-3">
            <AlertCircle className="w-5 h-5 text-purple-600 mt-0.5" />
            <div>
              <p className="font-semibold text-purple-900">Developer Access</p>
              <p className="text-sm text-purple-800 mt-1">
                This dashboard is only accessible to authorized developers. All financial data and user statistics are confidential.
              </p>
              <p className="text-xs text-purple-700 mt-2">
                Authorized: 8976096360 • deshpandekirti641@gmail.com
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Earnings Overview */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
        <Card className="bg-gradient-to-br from-green-500 to-emerald-600 text-white">
          <CardContent className="p-6">
            <div className="flex items-start justify-between mb-4">
              <div>
                <p className="text-sm opacity-90">Total Earnings</p>
                <p className="text-3xl font-bold flex items-center gap-1 mt-1">
                  <IndianRupee className="w-6 h-6" />
                  {(stats.totalEarnings / 100).toLocaleString()}
                </p>
              </div>
              <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                <DollarSign className="w-6 h-6" />
              </div>
            </div>
            <div className="flex items-center gap-2 text-sm">
              <TrendingUp className="w-4 h-4" />
              <span>All time revenue</span>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-blue-500 to-blue-600 text-white">
          <CardContent className="p-6">
            <div className="flex items-start justify-between mb-4">
              <div>
                <p className="text-sm opacity-90">Today Earnings</p>
                <p className="text-3xl font-bold flex items-center gap-1 mt-1">
                  <IndianRupee className="w-6 h-6" />
                  {(stats.todayEarnings / 100).toLocaleString()}
                </p>
              </div>
              <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                <Clock className="w-6 h-6" />
              </div>
            </div>
            <div className="text-sm">
              <Progress value={((stats.todayEarnings / stats.totalEarnings) * 100)} className="h-2 bg-white/20" />
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-purple-500 to-purple-600 text-white">
          <CardContent className="p-6">
            <div className="flex items-start justify-between mb-4">
              <div>
                <p className="text-sm opacity-90">Total Matches</p>
                <p className="text-3xl font-bold mt-1">{stats.totalMatches.toLocaleString()}</p>
              </div>
              <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                <Gamepad2 className="w-6 h-6" />
              </div>
            </div>
            <div className="text-sm">
              Avg. Duration: {stats.avgMatchDuration}s
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-orange-500 to-orange-600 text-white">
          <CardContent className="p-6">
            <div className="flex items-start justify-between mb-4">
              <div>
                <p className="text-sm opacity-90">Active Users</p>
                <p className="text-3xl font-bold mt-1">{stats.activeUsers}</p>
              </div>
              <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                <Users className="w-6 h-6" />
              </div>
            </div>
            <div className="text-sm">
              Total Users: {stats.totalUsers}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Revenue Breakdown */}
      <Card>
        <CardHeader>
          <CardTitle>Revenue Model</CardTitle>
          <CardDescription>Server fee structure per match</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
            <div className="p-4 bg-gray-50 rounded-lg">
              <p className="text-sm text-gray-600 mb-2">Match Entry (₹10)</p>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span>Player 1:</span>
                  <span className="font-semibold">₹10</span>
                </div>
                <div className="flex justify-between">
                  <span>Player 2:</span>
                  <span className="font-semibold">₹10</span>
                </div>
                <Separator />
                <div className="flex justify-between font-bold">
                  <span>Prize Pool:</span>
                  <span>₹20</span>
                </div>
              </div>
            </div>

            <div className="p-4 bg-green-50 rounded-lg border border-green-200">
              <p className="text-sm text-gray-600 mb-2">Winner Payout</p>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span>Prize Pool:</span>
                  <span>₹20</span>
                </div>
                <div className="flex justify-between">
                  <span>Winner Share (80%):</span>
                  <span className="font-semibold text-green-600">₹16</span>
                </div>
                <Separator />
                <div className="flex justify-between font-bold text-green-700">
                  <span>Net Earnings:</span>
                  <span>+₹6</span>
                </div>
              </div>
            </div>

            <div className="p-4 bg-purple-50 rounded-lg border border-purple-200">
              <p className="text-sm text-gray-600 mb-2">Server Revenue</p>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span>Prize Pool:</span>
                  <span>₹20</span>
                </div>
                <div className="flex justify-between">
                  <span>Server Fee (20%):</span>
                  <span className="font-semibold text-purple-600">₹4</span>
                </div>
                <Separator />
                <div className="flex justify-between font-bold text-purple-700">
                  <span>Per Match:</span>
                  <span>₹4</span>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
            <p className="text-sm text-yellow-900">
              <strong>Note:</strong> Server fee is automatically deducted from the prize pool and credited to the developer wallet after each match completion.
            </p>
          </div>
        </CardContent>
      </Card>

      {/* Recent Server Fees */}
      <Card>
        <CardHeader>
          <CardTitle>Recent Server Fees</CardTitle>
          <CardDescription>Latest transactions from completed matches</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-2">
            {stats.recentTransactions.map((txn: { id: string; type: string; amount: number; timestamp: Date }) => (
              <div key={txn.id} className="flex items-center justify-between p-3 bg-purple-50 rounded-lg">
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
                    <DollarSign className="w-5 h-5 text-purple-600" />
                  </div>
                  <div>
                    <p className="font-semibold">{txn.type}</p>
                    <p className="text-xs text-gray-500">{txn.timestamp.toLocaleString()}</p>
                  </div>
                </div>
                <p className="font-bold text-purple-600">+₹{(txn.amount / 100).toFixed(2)}</p>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Top Players */}
      <Card>
        <CardHeader>
          <CardTitle>Top Players</CardTitle>
          <CardDescription>Highest performing players on the platform</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {stats.topPlayers.map((player: { username: string; matches: number; winRate: number; earnings: number }, index: number) => (
              <div key={player.username} className="flex items-center gap-4 p-4 bg-gradient-to-r from-gray-50 to-white rounded-lg border">
                <div className="flex items-center justify-center w-12 h-12 bg-gradient-to-br from-yellow-400 to-yellow-600 rounded-full text-white font-bold text-xl">
                  {index + 1}
                </div>
                <div className="flex-1">
                  <p className="font-semibold text-lg">{player.username}</p>
                  <div className="flex items-center gap-4 text-sm text-gray-600 mt-1">
                    <span>{player.matches} matches</span>
                    <span>•</span>
                    <span>{player.winRate}% win rate</span>
                  </div>
                </div>
                <div className="text-right">
                  <Badge className="mb-2 bg-green-600">
                    <Award className="w-3 h-3 mr-1" />
                    Top Player
                  </Badge>
                  <p className="text-sm font-semibold text-green-600">₹{(player.earnings / 100).toFixed(2)}</p>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
